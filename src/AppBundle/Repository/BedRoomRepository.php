<?php

namespace AppBundle\Repository;

use AppBundle\Entity\BedRoom;
use AppBundle\Entity\Booking;
use AppBundle\Model\Result;
use DateTime;
use Doctrine\ORM\Query\Expr;

/**
 * BedRoomRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BedRoomRepository extends \Doctrine\ORM\EntityRepository
{

    public function search($name, $location, DateTime $startDate, DateTime $endDate)
    {
        $stmt = $this->getEntityManager()->createQueryBuilder()
                    ->select(array('u', 'h', 'l'))
                    ->from('AppBundle:BedRoom', 'u')
                    ->join('u.hotel', 'h')
                    ->join('h.location', 'l');

        if(null !== $name) {
            $stmt->andWhere("h.name LIKE :name");
            $stmt->setParameter("name", "%$name%");
        }

        if(null !== $location) {

            $stmt->andWhere($stmt->expr()->orX(
                $stmt->expr()->like('l.city', ':location'),
                $stmt->expr()->like('l.street', ':location'),
                $stmt->expr()->like('l.zipcode', ':location')
                ));

            $stmt->setParameter("location", "%$location%");
        }

        $rooms = $stmt->getQuery()->getResult();

        if(null === $startDate || null == $endDate) {
            return $rooms;
        }

        $stmt = $this->getEntityManager()->createQueryBuilder()
                ->select(array('u'))
                ->from('AppBundle:Booking', 'u')
                ->where(
                    $stmt->expr()->orX(
                        $stmt->expr()->andX($stmt->expr()->gte( 'u.startDate', ':startDate'), $stmt->expr()->lte('u.startDate', ':endDate')),
                        $stmt->expr()->andX($stmt->expr()->lte( 'u.startDate', ':startDate'), $stmt->expr()->lte('u.endDate', ':endDate'))
                    )
                )
                ->andWhere('u.bedroom IN (:rooms)')

                ->setParameter('startDate', $startDate)
                ->setParameter('endDate', $endDate)
                ->setParameter('rooms', $rooms)
            ;
        /** @var BedRoom[] */
        $roomsBookeds = array_map(function(Booking $v) {
            return $v->bedroom();
        }, $stmt->getQuery()->getResult());

        return array_filter($rooms, function(BedRoom $room) use($roomsBookeds) {
            return !in_array($room, $roomsBookeds);
        });



    }
}
